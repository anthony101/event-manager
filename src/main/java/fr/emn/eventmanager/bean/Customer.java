/*
 * Created on 28 oct. 2014 ( Time 22:18:22 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package fr.emn.eventmanager.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "CUSTOMER"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="CUSTOMER", schema="APP" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Customer.countAll", query="SELECT COUNT(x) FROM Customer x" )
} )
public class Customer implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="CUSTOMER_ID", nullable=false)
    private Long       customerId   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="CUSTOMER_EMAIL", nullable=false, length=254)
    private String     customerEmail ;

    @Column(name="CUSTOMER_PASSWORD", length=100)
    private String     customerPassword ;

    @Column(name="CUSTOMER_FIRSTNAME", nullable=false, length=50)
    private String     customerFirstname ;

    @Column(name="CUSTOMER_LASTNAME", length=50)
    private String     customerLastname ;

    @Column(name="CUSTOMER_COMPANY", length=50)
    private String     customerCompany ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(targetEntity=Event.class)
    @JoinTable(name="PARTICIPANT", 
      joinColumns=@JoinColumn(name="PARTICIPANT_CUSTOMER_ID", referencedColumnName="CUSTOMER_ID"),
      inverseJoinColumns=@JoinColumn(name="PARTICIPANT_EVENT_ID", referencedColumnName="EVENT_ID")
     ) 

    private List<Event> listOfEvent ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Customer() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCustomerId( Long customerId ) {
        this.customerId = customerId ;
    }
    public Long getCustomerId() {
        return this.customerId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : CUSTOMER_EMAIL ( VARCHAR ) 
    public void setCustomerEmail( String customerEmail ) {
        this.customerEmail = customerEmail;
    }
    public String getCustomerEmail() {
        return this.customerEmail;
    }

    //--- DATABASE MAPPING : CUSTOMER_PASSWORD ( VARCHAR ) 
    public void setCustomerPassword( String customerPassword ) {
        this.customerPassword = customerPassword;
    }
    public String getCustomerPassword() {
        return this.customerPassword;
    }

    //--- DATABASE MAPPING : CUSTOMER_FIRSTNAME ( VARCHAR ) 
    public void setCustomerFirstname( String customerFirstname ) {
        this.customerFirstname = customerFirstname;
    }
    public String getCustomerFirstname() {
        return this.customerFirstname;
    }

    //--- DATABASE MAPPING : CUSTOMER_LASTNAME ( VARCHAR ) 
    public void setCustomerLastname( String customerLastname ) {
        this.customerLastname = customerLastname;
    }
    public String getCustomerLastname() {
        return this.customerLastname;
    }

    //--- DATABASE MAPPING : CUSTOMER_COMPANY ( VARCHAR ) 
    public void setCustomerCompany( String customerCompany ) {
        this.customerCompany = customerCompany;
    }
    public String getCustomerCompany() {
        return this.customerCompany;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfEvent( List<Event> listOfEvent ) {
        this.listOfEvent = listOfEvent;
    }
    public List<Event> getListOfEvent() {
        return this.listOfEvent;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(customerId);
        sb.append("]:"); 
        sb.append(customerEmail);
        sb.append("|");
        sb.append(customerPassword);
        sb.append("|");
        sb.append(customerFirstname);
        sb.append("|");
        sb.append(customerLastname);
        sb.append("|");
        sb.append(customerCompany);
        return sb.toString(); 
    } 

}
